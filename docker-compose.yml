services:
  # API Backend
  api:
    build:
      context: .
      dockerfile: ./api/Dockerfile
    container_name: openai-agents-api
    ports:
      - "8012:8012"  # Port 8012 pour l'API
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY:-test}
      - PERPLEXITY_API_KEY=${PERPLEXITY_API_KEY:-}
      - API_PORT=8012
      - API_HOST=0.0.0.0
      - ENVIRONMENT=production
      - DEBUG=false
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - ./api/logs:/app/logs
    networks:
      - openai-agents-network
    restart: unless-stopped
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8012/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: openai-agents-frontend
    ports:
      - "3002:3001"  # Port 3002 pour le frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8012
      - NEXT_PUBLIC_WS_URL=ws://localhost:8012
      - NODE_ENV=production
    depends_on:
      - api
    networks:
      - openai-agents-network
    restart: unless-stopped

  # Redis pour le cache (optionnel)
  redis:
    image: redis:7-alpine
    container_name: openai-agents-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - openai-agents-network
    restart: unless-stopped
    command: redis-server --appendonly yes

networks:
  openai-agents-network:
    driver: bridge

volumes:
  redis_data:
    driver: local